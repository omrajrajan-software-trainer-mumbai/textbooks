


Which of the following are true? (Choose all that apply)
A. An instance variable of type double defaults to null.
B. An instance variable of type int defaults to null.
C. An instance variable of type String defaults to null.
D. An instance variable of type double defaults to 0.0.
E. An instance variable of type int defaults to 0.0.
F. An instance variable of type String defaults to 0.0.
G. None of the above.

C, D. 
Option C is correct because all non-primitive values default to null. 
Option D is correct because float and double primitives default to 0.0. 
Options B and E are incorrect because int primitives default to 0.

12. Which of the following are true? (Choose all that apply)
A. A local variable of type boolean defaults to null.
B. A local variable of type float defaults to 0.
C. A local variable of type Object defaults to null.
D. A local variable of type boolean defaults to false.
E. A local variable of type boolean defaults to true.
F. A local variable of type float defaults to 0.0.
G. None of the above.

G. 
Option G is correct because local variables do not get assigned default values. 
The code fails to compile if a local variable is not explicitly initialized. 
If this question were about instance variables, options D and F would be correct. 
A boolean primitive defaults to false and a float primitive defaults to 0.0.

13. Which of the following are true? (Choose all that apply)
A. An instance variable of type boolean defaults to false.
B. An instance variable of type boolean defaults to true.
C. An instance variable of type boolean defaults to null.
D. An instance variable of type int defaults to 0.
E. An instance variable of type int defaults to 0.0.
F. An instance variable of type int defaults to null.
G. None of the above.

A, D. 
Options A and D are correct because boolean primitives default to false 
and int primitives default to 0.

14. Given the following class in the file /my/directory/named/A/Bird.java:
INSERT CODE HERE
public class Bird { }
Which of the following replaces INSERT CODE HERE if we compile from /my/directory?
(Choose all that apply)
A. package my.directory.named.a;
B. package my.directory.named.A;
C. package named.a;
D. package named.A;
E. package a;
F. package A;
G. Does not compile.

D. The package name represents any folders underneath the current path, 
which is named.A in this case. Option B is incorrect because package names are case sensitive, 
just like variable names and other identifiers.

Which of the following lines of code compile? (Choose all that apply)
A. int i1 = 1_234;
B. double d1 = 1_234_.0;
C. double d2 = 1_234._0;
D. double d3 = 1_234.0_;
E. double d4 = 1_234.0;
F. None of the above.

A, E. Underscores are allowed as long as they are directly between two other digits. 
This means options A and E are correct. 
Options B and C are incorrect because the underscore is adjacent to the decimal point. 
Option D is incorrect because the underscore is the last character.

16. Given the following class, which of the following lines of code can replace INSERT CODE
HERE to make the code compile? (Choose all that apply)
public class Price {
public void admission() {
INSERT CODE HERE
System.out.println(amount);
} }
A. int amount = 9L;
B. int amount = 0b101;
C. int amount = 0xE;
D. double amount = 0xE;
E. double amount = 1_2_.0_0;
F. int amount = 1_2_;
G. None of the above.

B, C, D. 
0b is the prefix for a binary value and is correct. 
0x is the prefix for a hexadecimal value. 
This value can be assigned to many primitive types, including int and double, 
making options C and D correct. 
Option A is incorrect because 9L is a long value. long amount = 9L would be allowed. 
Option E is incorrect because the underscore is immediately before the decimal. 
Option F is incorrect because the underscore is the very last character.

17. Which of the following are true? (Choose all that apply)
public class Bunny {
public static void main(String[] args) {
Bunny bun = new Bunny();
} }
A. Bunny is a class.
B. bun is a class.
C. main is a class.
D. Bunny is a reference to an object.
E. bun is a reference to an object.
F. main is a reference to an object.
G. None of the above.

A, E. 
Bunny is a class, which can be seen from the declaration: public class Bunny. 
bun is a reference to an object. 
main() is a method.

18. Which represent the order in which the following statements can be assembled into a program
that will compile successfully? (Choose all that apply)
A: class Rabbit {}
B: import java.util.*;
C: package animals;
A. A, B, C
B. B, C, A
C. C, B, A
D. B, A
E. C, A
F. A, C
G. A, B

C, D, E. 
package and import are both optional. 
If both are present, the order must be package, then import, then class. 
Option A is incorrect because class is before package and import. 
Option B is incorrect because import is before package. 
Option F is incorrect because class is before package. 
Option G is incorrect because class is before import.

19. Suppose we have a class named Rabbit. Which of the following statements are true?
(Choose all that apply)
1: public class Rabbit {
2: public static void main(String[] args) {
3: Rabbit one = new Rabbit();
4: Rabbit two = new Rabbit();
5: Rabbit three = one;
6: one = null;
7: Rabbit four = one;
8: three = null;
9: two = null;
10: two = new Rabbit();
11: System.gc();
12: } }
A. The Rabbit object from line 3 is first eligible for garbage collection immediately
following line 6.
B. The Rabbit object from line 3 is first eligible for garbage collection immediately
following line 8.
C. The Rabbit object from line 3 is first eligible for garbage collection immediately
following line 12.
D. The Rabbit object from line 4 is first eligible for garbage collection immediately
following line 9.
E. The Rabbit object from line 4 is first eligible for garbage collection immediately
following line 11.
F. The Rabbit object from line 4 is first eligible for garbage collection immediately
following line 12.

B, D. 
The Rabbit object from line 3 has two references to it: one and three. 
The references are nulled out on lines 6 and 8, respectively. 
Option B is correct because this makes the object eligible for garbage collection after line 8. 
Line 7 sets the reference four to the now null one, 
which means it has no effect on garbage collection. 
The Rabbit object from line 4 only has a single reference to it: two. 
Option D is correct because this single reference becomes null on line 9. 
The Rabbit object declared on line 10 becomes eligible for garbage collection
at the end of the method on line 12. 
Calling System.gc() has no effect on eligibility for garbage collection.

20. What is true about the following code? (Choose all that apply)
public class Bear {
protected void finalize() {
System.out.println("Roar!");
}

public static void main(String[] args) {
Bear bear = new Bear();
bear = null;
System.gc();
} }
A. finalize() is guaranteed to be called.
B. finalize() might or might not be called
C. finalize() is guaranteed not to be called.
D. Garbage collection is guaranteed to run.
E. Garbage collection might or might not run.
F. Garbage collection is guaranteed not to run.
G. The code does not compile.

B, E. Calling System.gc() suggests that Java might wish to run the garbage collector. 
Java is free to ignore the request, making option E correct. 
finalize() runs if an object attempts to be garbage collected, making option B correct.

21. What does the following code output?
1: public class Salmon {
2: int count;
3: public void Salmon() {
4: count = 4;
5: }
6: public static void main(String[] args) {
7: Salmon s = new Salmon();
8: System.out.println(s.count);
9: } }
A. 0
B. 4
C. Compilation fails on line 3.
D. Compilation fails on line 4.
E. Compilation fails on line 7.
F. Compilation fails on line 8.

A. While the code on line 3 does compile, it is not a constructor because it has a return type. 
It is a method that happens to have the same name as the class. 
When the code runs, the default constructor is called 
and count has the default value (0) for an int.

22. Which of the following are true statements? (Choose all that apply)
A. Java allows operator overloading.
B. Java code compiled on Windows can run on Linux.
C. Java has pointers to specific locations in memory.
D. Java is a procedural language.
E. Java is an object-oriented language.
F. Java is a functional programming language.

B, E. C++ has operator overloading and pointers. 
Java made a point of not having either. 
Java does have references to objects, 
but these are pointing to an object that can move around in memory. 
Option B is correct because Java is platform independent. 
Option E is correct because Java is object oriented. 
While it does support some parts of functional programming, these occur within a class.

Which of the following are true? (Choose all that apply)
A. javac compiles a .class file into a .java file.
B. javac compiles a .java file into a .bytecode file.
C. javac compiles a .java file into a .class file.
D. Java takes the name of the class as a parameter.
E. Java takes the name of the .bytecode file as a parameter.
F. Java takes the name of the .class file as a parameter.

C, D. Java puts source code in .java files and bytecode in .class files. 
It does not use a .bytecode file. 
When running a Java program, 
you pass just the name of the class without the .class extension.